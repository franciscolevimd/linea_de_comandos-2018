TMUX

ctrl + b + % - Divide verticalmente la ventana.
ctrl + b + " - Divide horizontalmente la pantalla.
ctrl + b + x - Cierra la ventana actual.


Pila de directorios.

pushd [directorio a cual se desea cambiar] - Agrega la ruta del direcorio actual a una pila.
popd - Saca de la pila el la última ruta agregada a la pila de directorios.

tree: ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e  's/^//' -e 's/-/|/'


which [comando] busca la dirección de ejecutable del comando.

open -a [aplicación que se desea ejecutar] [parametros o banderas del ejecutable]

php l-streams.php 1> salida 2> error ## 1 es stdoutput y 2 stderror.

php l-streams.php 1> salida 2<&1 ## Mandar stderror hacia donde se va stdoutput

top ## procesos del sistema: Q para salir y O ara filtros.

kill -9 [PID] ## mata un proceso.

ps -wA ## para ver procesos.

uptime ## Nos dice tiempo. usuarios y carga promedio funcionando.

grep -r . -e [expresión] ## -r es recursivo seguido deñ directorio en donde se buscará la expresión -e.

grep -r [ruta] -e [expresion] nos ayuda a encontrar cadenas de caracteres dentro de todos los archivos de la ruta que le demos, con expresiones regulares.

grep -r -n .. ## -n para el número de linea.

grep [archivo] -e [expresión] ## busca la palabra dentro del archivo.

grep -v [expresión] ## Descarta la expresión dada.

wc -l ## lineas en un texto-

find [directorio en el que se desea buscar] -name [nombre de archivo] -type f]

date ## fecha
time ## tiempo de procesador


curl ## Emula requests un browser: busca e imprime el resultado.
curl -o [archivo que guarda imagen]
wget es una herramienta para descargar archivos de servidores

zip [nombre de zip].zip [lista de archivos y/o carpeta(s) que se desean comprimir]## Comprimir en zip

upzip [archivo] descomprime un .zip

      -vl no descomprime sino que ve lo que hay adentro

tar cfz [archivo.tar.gz] junta y comprime
tar xfz [archivo .tar.gz] descomprime

awk -F"::" ## -F separar por columnas uilizando como delimitador ::
awk -F"::" '{printf("%s\n",$3)}' ## Imprimir muy al estilos C el número de columan deseada.


SED (Stream EDitor) es un editor de flujos y ficheros de forma no interactiva. Permite modificar el contenido de las diferentes líneas de un fichero en base a una serie de comandos o un fichero de comandos (-f fichero_comandos).

Sed recibe por stdin (o vía fichero) una serie de líneas para manipular, y aplica a cada una de ellas los comandos que le especifiquemos a todas ellas, a un rango de las mismas, o a las que cumplan alguna condición.

El formato básico de uso de sed es:

   # sed [-ns] '[direccion] instruccion argumentos'

Donde:

[direccion] es opcional, siendo un número de línea (N), rango de números de línea (N,M) o búsqueda de regexp (/cadena/) indicando el ámbito de actuación de las instrucciones. Si no se especifica [direccion], se actúa sobre todas las líneas del flujo.
Instruccion puede ser:
i = Insertar línea antes de la línea actual.
a = Insertar línea después de la línea actual.
c = Cambiar línea actual.
d = Borrar línea actual.
p = Imprimir línea actual en stdout.
s = Sustituir cadena en línea actual.
r fichero = Añadir contenido de “fichero” a la línea actual.
w fichero = Escribir salida a un fichero.
! = Aplicar instrucción a las líneas no seleccionadas por la condición.
q = Finalizar procesamiento del fichero.
-n: No mostrar por stdout las líneas que están siendo procesadas.
-s: Tratar todos los ficheros entrantes como flujos separados.

Fuente: http://www.sromero.org/wiki/linux/aplicaciones/uso_de_sed
Mas info en: https://linux.die.net/man/1/sed

